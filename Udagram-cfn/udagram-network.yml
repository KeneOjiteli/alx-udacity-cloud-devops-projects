Description : 
    This cloudformation script is going to deploy network infrastructure for a high availability web-app (Udagram)

Parameters :
    EnvironmentName :
        Type: String
        Description : An environment name that will be prefixed to resource names
        
    MyVPC :
        Type : String
        Description : Enter IP range (CIDR notation) for this VPC
        Default : 10.0.0.0/16

    MyPublicSubnet1CIDR :
        Type : String
        Description : Public Subnet 1 in AZ 1 CIDR block
        Default : 10.0.0.0/24

    MyPrivateSubnet1CIDR :
        Type : String
        Description : Private Subnet 1 in AZ 1 CIDR block
        Default : 10.0.1.0/24

    MyPublicSubnet2CIDR :
        Type : String
        Description : Public Subnet 2 in AZ 2 CIDR block
        Default : 10.0.2.0/24

    MyPrivateSubnet2CIDR :
        Type : String
        Description : Private Subnet 2 in AZ 2 CIDR block
        Default : 10.0.3.0/24

Resources :
    # Network infra
    VPC :
        Type : AWS::EC2::VPC
        Properties :
           CidrBlock : !Ref MyVPC
           EnableDnsSupport : true
           EnableDnsHostnames : true
           Tags :
               - Key : Name
                 Value : VPC

    PublicSubnet1 :
        Type : AWS::EC2::Subnet
        Properties :
            VpcId : !Ref VPC
            CidrBlock : !Ref MyPublicSubnet1CIDR
            MapPublicIpOnLaunch : true
            AvailabilityZone : !Select [0, !GetAZs '']
            Tags :
               - Key : Name
                 Value : !Sub ${EnvironmentName} PublicSubnet1

    PrivateSubnet1 :
        Type : AWS::EC2::Subnet
        Properties :
            VpcId : !Ref VPC
            CidrBlock : !Ref MyPrivateSubnet1CIDR
            AvailabilityZone : !Select [0, !GetAZs '']
            Tags :
               - Key : Name
                 Value : !Sub ${EnvironmentName} PrivateSubnet1

    PublicSubnet2 :
        Type : AWS::EC2::Subnet
        Properties :
            VpcId : !Ref VPC
            CidrBlock : !Ref MyPublicSubnet2CIDR
            MapPublicIpOnLaunch : true
            AvailabilityZone : !Select [1, !GetAZs '']
            Tags :
               - Key : Name
                 Value : !Sub ${EnvironmentName} PublicSubnet2

    PrivateSubnet2 :
        Type : AWS::EC2::Subnet
        Properties :
            VpcId : !Ref VPC
            CidrBlock : !Ref MyPrivateSubnet2CIDR
            AvailabilityZone : !Select [1, !GetAZs '']
            Tags :
               - Key : Name
                 Value : !Sub ${EnvironmentName} PrivateSubnet2

    InternetGateWay :
        Type : AWS::EC2::InternetGateway
        Properties : 
            Tags :
                - Key : Name
                  Value : IGW

    InternetGatewayAttachment :
        Type: AWS::EC2::VPCGatewayAttachment
        Properties :
            VpcId : !Ref VPC
            InternetGatewayId : !Ref InternetGateWay

    EIP1 :
        Type : AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties :
            Domain : vpc

    NatGateway1 :
        Type : AWS::EC2::NatGateway
        Properties :
            AllocationId : !GetAtt EIP1.AllocationId
            SubnetId : !Ref PublicSubnet1

    EIP2 :
        Type : AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties :
            Domain : vpc

    NatGateway2 :
        Type : AWS::EC2::NatGateway
        Properties :
            AllocationId : !GetAtt EIP2.AllocationId
            SubnetId : !Ref PublicSubnet2

    PublicRouteTable :
        Type : AWS::EC2::RouteTable
        Properties :
            VpcId : !Ref VPC
            Tags :
                - Key: Name
                  Value: !Sub ${EnvironmentName} Public Route

    PrivateRouteTable1 :
        Type : AWS::EC2::RouteTable
        Properties :
            VpcId : !Ref VPC
            Tags:
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Private Route1

    PrivateRouteTable2 :
        Type : AWS::EC2::RouteTable
        Properties :
            VpcId : !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private Route2

    PublicRoute :
        Type : AWS::EC2::Route
        DependsOn : InternetGatewayAttachment
        Properties :
            RouteTableId : !Ref PublicRouteTable
            DestinationCidrBlock : 0.0.0.0/0
            GatewayId : !Ref InternetGateWay

    PublicSubnet1RouteTableAssociation : 
        Type : AWS::EC2::SubnetRouteTableAssociation
        Properties :
            SubnetId : !Ref PublicSubnet1
            RouteTableId : !Ref PublicRouteTable

    PublicSubnet2RouteTableAssociation :
        Type : AWS::EC2::SubnetRouteTableAssociation
        Properties :
            SubnetId : !Ref PublicSubnet2
            RouteTableId : !Ref PublicRouteTable

    PrivateRoute1 :
        Type : AWS::EC2::Route
        Properties :
            RouteTableId : !Ref PrivateRouteTable1
            DestinationCidrBlock : 0.0.0.0/0
            NatGatewayId : !Ref NatGateway1

    PrivateRoute2 :
        Type : AWS::EC2::Route
        Properties :
            RouteTableId : !Ref PrivateRouteTable2
            DestinationCidrBlock : 0.0.0.0/0
            NatGatewayId : !Ref NatGateway2

    PrivateSubnet1RouteTableAssociation :
        Type : AWS::EC2::SubnetRouteTableAssociation
        Properties :
            SubnetId: !Ref PrivateSubnet1
            RouteTableId : !Ref PrivateRouteTable1

    PrivateSubnet2RouteTableAssociation :
        Type : AWS::EC2::SubnetRouteTableAssociation
        Properties :
            SubnetId : !Ref PrivateSubnet2
            RouteTableId : !Ref PrivateRouteTable2
          
Outputs :
    VPC :
        Description : Reference for VPC 
        Export :
            Name : !Sub ${EnvironmentName}-VPCID
        Value : !Ref VPC

    PublicSubnet1 :
        Description : Reference for pub-subnet 1
        Export :
            Name: !Sub ${EnvironmentName}-PublicSubnet1
        Value : !Ref PublicSubnet1

    PrivateSubnet1:
        Description : Reference for pri-subnet 1
        Export :
            Name : !Sub ${EnvironmentName}-PrivateSubnet1
        Value : !Ref PrivateSubnet1

    PublicSubnet2 :
        Description : Reference for pub-subnet 2
        Export :
            Name: !Sub ${EnvironmentName}-PublicSubnet2
        Value : !Ref PublicSubnet2

    PrivateSubnet2:
        Description : Reference for pri-subnet 2
        Export :
            Name : !Sub ${EnvironmentName}-PrivateSubnet2
        Value : !Ref PrivateSubnet2

    PublicSubnets:
        Description: Combination of all public subnets
        Export:
            Name: !Sub ${EnvironmentName}-PUB-NETS
        Value: !Join [ ",", [!Ref PublicSubnet1, !Ref PublicSubnet2]]

    PrivateSubnets:
        Description: Combination of all private subnets
        Export:
            Name: !Sub ${EnvironmentName}-PRIV-NETS
        Value: !Join [ ",", [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]

    VPCPublicRouteTable:
        Description: Route Table for public subnets
        Export:
            Name: !Sub ${EnvironmentName}-PublicRouteTable
        Value : !Ref PublicRouteTable

    VPCPrivateRouteTable1:
        Description: Route Table for private subnet in AZ1 routing to NAT gateway 1
        Export:
            Name: !Sub ${EnvironmentName}-PrivateRouteTable1
        Value : !Ref PrivateRouteTable1

    VPCPrivateRouteTable2:
        Description: Route Table for private subnet in AZ2 routing to NAT gateway 2
        Export:
            Name: !Sub ${EnvironmentName}-PrivateRouteTable2
        Value : !Ref PrivateRouteTable2

